module Evergreen.Migrate.V3 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V1.Types
import Evergreen.V3.Types
import Lamdera.Migrations exposing (..)


frontendModel : Evergreen.V1.Types.FrontendModel -> ModelMigration Evergreen.V3.Types.FrontendModel Evergreen.V3.Types.FrontendMsg
frontendModel old =
    ModelUnchanged


backendModel : Evergreen.V1.Types.BackendModel -> ModelMigration Evergreen.V3.Types.BackendModel Evergreen.V3.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V1.Types.FrontendMsg -> MsgMigration Evergreen.V3.Types.FrontendMsg Evergreen.V3.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V1.Types.ToBackend -> MsgMigration Evergreen.V3.Types.ToBackend Evergreen.V3.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V1.Types.BackendMsg -> MsgMigration Evergreen.V3.Types.BackendMsg Evergreen.V3.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V1.Types.ToFrontend -> MsgMigration Evergreen.V3.Types.ToFrontend Evergreen.V3.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_EditableLog : Evergreen.V1.Types.EditableLog -> Evergreen.V3.Types.EditableLog
migrate_Types_EditableLog old =
    { date = old.date
    , title = old.title |> migrate_Types_Modifiable
    , content = old.content |> migrate_Types_Modifiable
    }


migrate_Types_EditableLogList : Evergreen.V1.Types.EditableLogList -> Evergreen.V3.Types.EditableLogList
migrate_Types_EditableLogList old =
    { timestamp = old.timestamp
    , currentLog = old.currentLog |> migrate_Types_Submittable migrate_Types_EditableLog
    , logHistory = old.logHistory
    , sha = old.sha
    }


migrate_Types_Modifiable : Evergreen.V1.Types.Modifiable -> Evergreen.V3.Types.Modifiable
migrate_Types_Modifiable old =
    case old of
        Evergreen.V1.Types.Unmodified p0 ->
            Evergreen.V3.Types.Unmodified p0

        Evergreen.V1.Types.Modified p0 ->
            Evergreen.V3.Types.Modified p0


migrate_Types_Submittable : (a_old -> a_new) -> Evergreen.V1.Types.Submittable a_old -> Evergreen.V3.Types.Submittable a_new
migrate_Types_Submittable migrate_a old =
    case old of
        Evergreen.V1.Types.Fresh p0 ->
            Evergreen.V3.Types.Fresh (p0 |> migrate_a)

        Evergreen.V1.Types.Submitting p0 ->
            Evergreen.V3.Types.Submitting (p0 |> migrate_a)

        Evergreen.V1.Types.Issue p0 p1 ->
            Evergreen.V3.Types.Issue (p0 |> migrate_a) p1


migrate_Types_ToBackend : Evergreen.V1.Types.ToBackend -> Evergreen.V3.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V1.Types.TB_LoadLogs writeDetails ->
            Evergreen.V3.Types.TB_LoadLogs (Evergreen.V3.Types.StorageWrite writeDetails)

        Evergreen.V1.Types.TB_CreateNewLog p0 p1 p2 ->
            Evergreen.V3.Types.TB_CreateNewLog (p0 |> migrate_Types_WriteDetails) p1 p2

        Evergreen.V1.Types.TB_LoadMoreLogs _ unloadedLogs ->
            Evergreen.V3.Types.TB_LoadMoreLogs unloadedLogs

        Evergreen.V1.Types.TB_SubmitExistingChange p0 p1 ->
            Evergreen.V3.Types.TB_SubmitExistingChange (p0 |> migrate_Types_WriteDetails)
                (p1 |> migrate_Types_EditableLogList)


migrate_Types_WriteDetails : Evergreen.V1.Types.StorageDetails -> Evergreen.V3.Types.WriteDetails
migrate_Types_WriteDetails old =
    old
